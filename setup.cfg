[metadata]
# the package will be referenced with this name
name = pip_package_demo

# read the version number from the file
version = attr: daniels_package.daniels_module.__version__

author = Daniel Tuzes
author_email = tuzesdaniel@gmail.com
description = A demonstration how to test, document and distribute a python package with pip.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/danieltuzes/pip_package_demo
project_urls =
    Bug Tracker = https://github.com/danieltuzes/pip_package_demo/issues?1
    Tracker = https://github.com/danieltuzes/pip_package_demo/issues?2
    Documentation = http://metal.elte.hu/~tuzes/static/pip_package_demo_doc_build_html/
    Source = https://github.com/danieltuzes/pip_package_demo/tree/master/src/daniels_package
keywords = python, packaging, pip

# tells the package repository the versions you support
# python doesn't care about this info
classifiers =
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    
[options]
package_dir=
    =src

# I use namespace package, no __init__.py
packages=find_namespace:

# If regular (aka simple) package is needed, add __init__.py into the directory
# you want to handle as package and use 
# packages=find:

# the code needs this/these external libraries
# version number is optionial
install_requires=
    numpy>=1.19.1

# ofc you already have python, but this request must be satisfied
python_requires=>=3.6

# tests_require is deprecated. Tell the user how to test
# and provide a separate file such as requirements.txt

[options.packages.find]
where = src


# This can be moved to a pylama.ini file
# But I thought it is better here
[pylama]
linters = mccabe,pydocstyle,pycodestyle,pyflakes,pylint
ignore = D213,D203
skip = doc/*

[pylama:mccabe]
complexity = 10